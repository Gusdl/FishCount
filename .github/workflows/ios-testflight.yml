name: iOS TestFlight

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

env:
  SCHEME: Fischbestand
  PROJECT: Fischbestand.xcodeproj
  TEAM_ID: XDLCKT3P87
  BUNDLE_ID: com.simonmaiwald.fischbestand

jobs:
  build-and-upload:
    runs-on: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 15.4
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.4'

      - name: Validate P12 secret
        env:
          CERT_P12: ${{ secrets.CERT_P12 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        run: |
          set -euo pipefail
          P12=/tmp/cert.p12
          python3 - <<'PY'
import base64, os, pathlib
path = pathlib.Path("/tmp/cert.p12")
path.write_bytes(base64.b64decode(os.environ["CERT_P12"]))
PY
          if ! /usr/bin/openssl pkcs12 -in "$P12" -info -nokeys -passin pass:"$P12_PASSWORD" >/dev/null 2>&1; then
            echo "::error::P12 Passwort falsch ODER CERT_P12 Base64 defekt (abgeschnitten/ZeilenumbrÃ¼che/falsche Datei)."
            exit 1
          fi

      - name: Import signing certificate
        env:
          CERT_P12: ${{ secrets.CERT_P12 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        run: |
          set -euo pipefail
          CERT_PATH="$RUNNER_TEMP/certificate.p12"
          KEYCHAIN_PATH="$RUNNER_TEMP/app-signing.keychain-db"
          KEYCHAIN_PASSWORD="$(uuidgen)"

          printf '%s' "$CERT_P12" | base64 --decode > "$CERT_PATH"

          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_PATH"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security import "$CERT_PATH" -k "$KEYCHAIN_PATH" -P "$P12_PASSWORD" \
            -T /usr/bin/codesign \
            -T /usr/bin/security \
            -T /usr/bin/productbuild
          EXISTING_KEYCHAINS=$(security list-keychains -d user | tr -d '"')
          security list-keychains -d user -s "$KEYCHAIN_PATH" $EXISTING_KEYCHAINS
          security default-keychain -d user -s "$KEYCHAIN_PATH"
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"

      - name: Install provisioning profile
        env:
          MOBILEPROVISION_BASE64: ${{ secrets.MOBILEPROVISION }}
        run: |
          set -euo pipefail
          PROFILE_DIR="$HOME/Library/MobileDevice/Provisioning Profiles"
          mkdir -p "$PROFILE_DIR"
          PROFILE_PATH="$PROFILE_DIR/profile.mobileprovision"
          python3 -c "import base64, os, pathlib; pathlib.Path(os.environ['PROFILE_PATH']).write_bytes(base64.b64decode(os.environ['MOBILEPROVISION_BASE64']))"
          /usr/bin/security cms -D -i "$PROFILE_PATH" > profile.plist
          PP_NAME=$(/usr/libexec/PlistBuddy -c 'Print :Name' profile.plist)
          echo "PP_NAME=$PP_NAME" >> "$GITHUB_ENV"

      - name: Resolve SPM (optional)
        run: xcodebuild -resolvePackageDependencies -project "$PROJECT" -scheme "$SCHEME"

      - name: Build archive
        run: |
          set -euo pipefail
          xcodebuild \
            -project "$PROJECT" \
            -scheme "$SCHEME" \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath "$PWD/build/$SCHEME.xcarchive" \
            archive \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID" \
            PROVISIONING_PROFILE_SPECIFIER="$PP_NAME" \
            CODE_SIGN_IDENTITY="Apple Distribution"

      - name: Export IPA
        run: |
          set -euo pipefail
          cat > ExportOptions.plist <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0"><dict>
            <key>method</key><string>app-store-connect</string>
            <key>teamID</key><string>${TEAM_ID}</string>
            <key>signingStyle</key><string>manual</string>
            <key>provisioningProfiles</key><dict>
              <key>${BUNDLE_ID}</key><string>${PP_NAME}</string>
            </dict>
          </dict></plist>
          PLIST
          xcodebuild -exportArchive \
            -archivePath "$PWD/build/$SCHEME.xcarchive" \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath "$PWD/build"

      - name: Prepare App Store Connect key
        if: github.event_name != 'pull_request'
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_API_KEY_CONTENTS: ${{ secrets.ASC_API_KEY_CONTENTS }}
        run: |
          set -euo pipefail
          KEY_DIR="$HOME/.appstoreconnect/private_keys"
          mkdir -p "$KEY_DIR"
          echo "$ASC_API_KEY_CONTENTS" > "$KEY_DIR/AuthKey_${ASC_KEY_ID}.p8"

      - name: Upload to TestFlight (Transporter)
        if: github.event_name != 'pull_request'
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
        run: |
          set -euo pipefail
          test -f "build/${SCHEME}.ipa"
          xcrun iTMSTransporter -m upload \
            -apiKey "$ASC_KEY_ID" \
            -apiIssuer "$ASC_ISSUER_ID" \
            -assetFile "build/${SCHEME}.ipa" -verbose
