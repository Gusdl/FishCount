name: iOS TestFlight

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  SCHEME: Fischbestand
  PROJECT: Fischbestand.xcodeproj
  TEAM_ID: XDLCKT3P87
  BUNDLE_ID: com.simonmaiwald.fischbestand

jobs:
  build-and-upload:
    runs-on: macos-15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Select Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.1'

      - name: Import signing certificate
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.CERT_P12 }}
          p12-password: ${{ secrets.P12_PASSWORD }}

      - name: Install provisioning profile
        env:
          MOBILEPROVISION_BASE64: ${{ secrets.MOBILEPROVISION }}
        run: |
          set -euo pipefail
          PROFILE_DIR="$HOME/Library/MobileDevice/Provisioning Profiles"
          PROFILE_PATH="$PROFILE_DIR/profile.mobileprovision"
          mkdir -p "$PROFILE_DIR"
          export PROFILE_PATH
          python3 - <<'PY'
import base64
import os
import pathlib

data = os.environ["MOBILEPROVISION_BASE64"]
path = pathlib.Path(os.environ["PROFILE_PATH"])
path.write_bytes(base64.b64decode(data))
PY
          /usr/bin/security cms -D -i "$PROFILE_PATH" > profile.plist
          PP_NAME=$(/usr/libexec/PlistBuddy -c 'Print :Name' profile.plist)
          PP_UUID=$(/usr/libexec/PlistBuddy -c 'Print :UUID' profile.plist)
          echo "PP_NAME=$PP_NAME" >> "$GITHUB_ENV"
          echo "PP_UUID=$PP_UUID" >> "$GITHUB_ENV"

      - name: Build archive
        run: |
          set -euo pipefail
          xcodebuild \
            -project "$PROJECT" \
            -scheme "$SCHEME" \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath "$PWD/build/$SCHEME.xcarchive" \
            archive \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID" \
            PROVISIONING_PROFILE_SPECIFIER="$PP_NAME" \
            CODE_SIGN_IDENTITY="Apple Distribution"

      - name: Export IPA
        run: |
          set -euo pipefail
          cat > ExportOptions.plist <<PLIST
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0"><dict>
            <key>method</key><string>app-store-connect</string>
            <key>teamID</key><string>${TEAM_ID}</string>
            <key>signingStyle</key><string>manual</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>${BUNDLE_ID}</key><string>${PP_NAME}</string>
            </dict>
          </dict></plist>
          PLIST
          xcodebuild -exportArchive \
            -archivePath "$PWD/build/$SCHEME.xcarchive" \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath "$PWD/build"

      - name: Prepare App Store Connect key
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_API_KEY_CONTENTS: ${{ secrets.ASC_API_KEY_CONTENTS }}
        run: |
          set -euo pipefail
          KEY_DIR="$HOME/.appstoreconnect/private_keys"
          mkdir -p "$KEY_DIR"
          KEY_PATH="$KEY_DIR/AuthKey_${ASC_KEY_ID}.p8"
          python3 - <<'PY'
import os
import pathlib

path = pathlib.Path(os.environ["KEY_PATH"])
path.write_text(os.environ["ASC_API_KEY_CONTENTS"], encoding="utf-8")
PY

      - name: Upload to TestFlight
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
        run: |
          set -euo pipefail
          test -f "build/${SCHEME}.ipa"
          xcrun altool --upload-app \
            --type ios \
            --file "build/${SCHEME}.ipa" \
            --apiKey "$ASC_KEY_ID" \
            --apiIssuer "$ASC_ISSUER_ID"
